(version 1)

(define home-path (param "HOME_PATH"))
(define java-home (param "JAVA_HOME"))
(define launcher-data-dir (param "LAUNCHER_DATA_DIR"))
(define launcher-app-dir (param "LAUNCHER_APPLICATION_DIR"))
(define minecraft-path (param "MC_INSTANCE_DIR"))
(define deny-risky-file-writes (param "DENY_RISKY_FILE_WRITES"))
(define allow-urls (param "ALLOW_LS_OPENING_URLS"))

(deny default)

(allow process-exec
  (subpath java-home)
  (literal "/usr/bin/open")
  (literal "/bin/sh")
  (literal "/bin/bash")
)
(allow process-fork)

; the first three are definitely needed, I saw the others in /System/Library/Sandbox/Profiles/application.sb
(allow iokit-open-user-client
  (iokit-user-client-class
    "AGXDeviceUserClient"
    "IOSurfaceRootUserClient"
    "IOGPUGLDrawableUserClient"
    "AppleSATLSMARTUserClient"
    "AHCISMARTUserClient"
    "ATASMARTUserClient"
    "AppleUpstreamUserClient"
    "AudioAUUC"
    "IOUserUserClient"
    "SCSITaskUserClient"
    "IOHIDParamUserClient"))

; (allow system-socket) ; is this needed? there's lots of attempts to do this
(import "/System/Library/Sandbox/Profiles/bsd.sb")

(allow network*)

; allow graphics
(system-graphics)

(allow file-read* (subpath "/usr/bin"))

; Allow read and write access to Minecraft application files
(allow file-read* file-write*
  (subpath "/private/tmp")
  (subpath "/usr")

  (subpath (string-append home-path "/Library/Caches/JNA"))

  ; some mods might write here, regardless of not using the official launcher...
  (subpath (string-append home-path "/Library/Application Support/minecraft"))
  (subpath (string-append home-path "/Library/Application Support/.minecraft"))
  
  ; Changes for Prism Launcher
  (subpath minecraft-path)
  (subpath (string-append launcher-data-dir "/instances"))

  (subpath (string-append launcher-data-dir "/assets"))
)

(allow file-read*
  (subpath "/sbin")
  (subpath "/usr/sbin") ; is this needed? it tries to run system_profiler, which gives a lot of information
  (subpath "/bin")
  (subpath "/usr/bin")
  (subpath "/usr/local/bin")
  (subpath "/opt")

  (subpath "/dev")

  (subpath launcher-app-dir)
  ; (subpath "$$$LAUNCHER_APPLICATION_PATH$$$")

  (subpath (string-append launcher-data-dir "/libraries"))
)

; Some other random minecraft stuff
(allow file-issue-extension 
  (extension-class "com.apple.app-sandbox.read")
)

; no idea 
(allow file-read-data
  (subpath "/private/etc/hosts")
)

; Access to the computer user data
(allow mach-lookup 
    (global-name "com.apple.biome.compute.source.user")
)

; from application.sb
(allow mach-lookup
  (local-name "com.apple.CFPasteboardClient")
  (local-name "com.apple.coredrag")
  (global-name "com.apple.ap.adprivacyd.trackingtransparency")
  (global-name "com.apple.apsd")
  (global-name "com.apple.assistant.analytics")
  (global-name "com.apple.assistant.dictation")
  (global-name
    "com.apple.AuthenticationServicesCore.AuthenticationServicesAgent")
  (global-name "com.apple.backupd.sandbox.xpc")
  (global-name "com.apple.bird")
  (global-name "com.apple.bird.token")
  (global-name "com.apple.BluetoothServices")
  (global-name "com.apple.cache_delete.public")
  (global-name "com.apple.callkit.callcontrollerhost")
  (global-name "com.apple.chrono.widgetcenterconnection")
  (global-name "com.apple.chronoservices")
  (global-name "com.apple.colorsyncd")
  (global-name "com.apple.colorsync.useragent")
  (global-name "com.apple.containermanagerd")
  (global-name "com.apple.controlcenter.toggle")
  (global-name "com.apple.coreservices.appleevents")
  (global-name "com.apple.CoreServices.coreservicesd")
  (global-name "com.apple.coreservices.launcherror-handler")
  (global-name "com.apple.coreservices.quarantine-resolver")
  (global-name "com.apple.cvmsServ")
  (global-name "com.apple.devicecheckd")
  (global-name "com.apple.DiskArbitration.diskarbitrationd")
  (global-name "com.apple.distributed_notifications@1v3")
  (global-name "com.apple.distributed_notifications@Uv3")
  (global-name "com.apple.dock.fullscreen")
  (global-name "com.apple.dock.server")
  (global-name "com.apple.donotdisturb.appconfiguration.service")
  (global-name "com.apple.donotdisturb.availability.service")
  (global-name "com.apple.ensemble.dragserver")
  (global-name "com.apple.FileCoordination")
  (global-name "com.apple.FileProvider")
  (global-name "com.apple.FontObjectsServer")
  (global-name "com.apple.FontRegistry.FontRegistryUIAgent")
  (global-name "com.apple.fonts")
  (global-name "com.apple.FSEvents")
  (global-name "com.apple.gamepolicyd.app")
  (global-name "com.apple.GSSCred")
  (global-name "com.apple.helpd")
  (global-name "com.apple.icdd")
  (global-name "com.apple.iconservices")
  (global-name "com.apple.iconservices.store")
  (global-name "com.apple.iiod")
  (global-name "com.apple.ink.private")
  (global-name "com.apple.inputmethodkit.getxpcendpoint")
  (global-name "com.apple.inputmethodkit.launchagent")
  (global-name "com.apple.inputmethodkit.launcher")
  (global-name "com.apple.inputmethodkit.setxpcendpoint")
  (global-name "com.apple.iohideventsystem")
  (global-name "com.apple.itunescloudd.tcchelper")
  (global-name "com.apple.itunescloudd.xpc")
  (global-name "com.apple.KerberosHelper.LKDCHelper")
  (global-name "com.apple.KeyboardServices.TextReplacementService")
  (global-name "com.apple.kvsd")
  (global-name "com.apple.lookupd")
  (global-name "com.apple.ls.boxd")
  (global-name "com.apple.mediaremoted.xpc")
  (global-name "com.apple.metadata.mds")
  (global-name "com.apple.midiserver")
  (global-name "com.apple.midiserver.io")
  (global-name "com.apple.naturallanguaged")
  (global-name "com.apple.netauth.user.auth")
  (global-name "com.apple.pasteboard.1")
  (global-name "com.apple.pbs.fetch_services")
  (global-name "com.apple.pluginkit.pkd")
  (global-name "com.apple.ProgressReporting")
  (global-name "com.apple.quicklook")
  (global-name "com.apple.quicklook.config")
  (global-name "com.apple.quicklook.ThumbnailsAgent")
  (global-name "com.apple.quicklook.ui.helper")
  (global-name "com.apple.quicklook.ui.helper.active")
  (global-name "com.apple.revisiond")
  (global-name "com.apple.rtcreportingd")
  (global-name "com.apple.rti-autofill")
  (global-name "com.apple.security.pboxd")
  (global-name "com.apple.securityd.xpc")
  (global-name "com.apple.SecurityServer")
  (global-name "com.apple.sharingd.nsxpc")
  (global-name "com.apple.SleepServices")
  (global-name "com.apple.speech.recognitionserver")
  (global-name "com.apple.speech.synthesis.console")
  (global-name "com.apple.speechArbitrationServer")
  (global-name "com.apple.spindump")
  (global-name "com.apple.swiftuitracingsupport.xpc")
  (global-name "com.apple.syncdefaultsd")
  (global-name "com.apple.system.DirectoryService.membership_v1")
  (global-name "com.apple.system.opendirectoryd.api")
  (global-name "com.apple.SystemConfiguration.configd")
  (global-name "com.apple.SystemConfiguration.DNSConfiguration")
  (global-name "com.apple.SystemConfiguration.NetworkInformation")
  (global-name "com.apple.tailspind")
  (global-name "com.apple.tccd")
  (global-name "com.apple.tccd.system")
  (global-name
    "com.apple.telephonyutilities.callservicesdaemon.callcapabilities")
  (global-name
    "com.apple.telephonyutilities.callservicesdaemon.voip.push.development")
  (global-name
    "com.apple.telephonyutilities.callservicesdaemon.voip.push")
  (global-name "com.apple.telephonyutilities.callservicesdaemon.voip")
  (global-name "com.apple.TrustEvaluationAgent")
  (global-name "com.apple.tsm.uiserver")
  (global-name "com.apple.UNCUserNotification")
  (global-name "com.apple.VirtualDisplay")
  (global-name "com.apple.VoiceOver.running")
  (global-name "com.apple.webprivacyd")
  (global-name "com.apple.window_proxies")
  (global-name "com.apple.windowmanager.dragserver")
  (global-name "com.apple.windowmanager.server")
  (global-name "com.apple.windowserver.active")
  (global-name "com.apple.WorkflowServiceRunner")
  (global-name "com.apple.xpc.loginitemregisterd")
  (global-name "com.apple.xpc.smd")
  (global-name-regex "_OpenStep$")

  (global-name "com.apple.coreservices.launchservicesd")
  (global-name "com.apple.CARenderServer")
  (global-name "com.apple.backlightd")
  (global-name "com.apple.audio.AudioComponentRegistrar")
  (global-name "com.apple.audio.AudioSession")
)

; Allow access to user inpt data & crash reporter / security plist
(allow file-read-data
  (subpath "/Library/Spelling")
  (subpath "/Library/Input Methods")
  (subpath "/Library/Keyboard Layouts")
  (subpath "/Library/Fonts")
  (subpath (string-append home-path "/Library/Spelling"))
  (subpath (string-append home-path "/Library/Input Methods"))
  (subpath (string-append home-path "/Library/Keyboard Layouts"))
  (subpath (string-append home-path "/Library/Fonts"))

  (subpath "/Library/Preferences/com.apple.security.plist")
  (subpath "/Library/Application Support/CrashReporter/DiagnosticMessagesHistory.plist")
)

; Domains which minecraft needs access to, including graphics, recogition and security
(allow user-preference-read 
  (preference-domain "com.apple.speech.recognition.AppleSpeechRecognition.prefs")
  (preference-domain "com.apple.HIToolbox")
  (preference-domain "com.apple.CoreGraphics")
  (preference-domain "com.apple.universalaccess")
  (preference-domain "com.apple.security")
  (preference-domain "pbs")
)

; Allow read and write access to neccesary system files
(allow file-read* file-write*
  (subpath "/private/var/folders")
  (subpath "/var/folders")
)
(allow file-read-data
  (subpath "/Library/Java/JavaVirtualMachines")
)

; Give access to the tccd app bundle
(allow mach-lookup (global-name "com.apple.tccd.systempolicy.appbundles"))

; Diagnostic Message history access and security accesss
(allow file-read-data 
  (subpath "/Library/Application Support/CrashReporter/DiagnosticMessagesHistory.plist")
  (subpath "/private/var/db/searchparty/sharedVault/agents/78BFBE72-7C54-4571-8D1B-5F58D809AA3B/savedConfiguration.plist")
  (subpath "/Library/Preferences/com.apple.networkd.plist")
  (subpath "/private/var/db/searchparty/sharedVault/BeaconPayloadCache")
  ;(subpath "$HOME/Library/Preferences/com.apple.security.plist")
)

; Allow access to Rosetta runtime
(allow file-read*
  (subpath "/Library/Apple/usr/libexec/oah/libRosettaRuntime")
)

; Allow access to specific system frameworks and libraries
(allow file-read*
  (subpath "/System/Library/Frameworks/OpenGL.framework")
  (subpath "/System/Library/Frameworks/CoreAudio.framework")
  (subpath "/System/Library/Frameworks/CoreMedia.framework")
  (subpath "/System/Library/PrivateFrameworks/GameKitServices.framework")
)

(allow user-preference-read
  (preference-domain "kCFPreferencesAnyApplication")
  ; (preference-domain "kCFPreferencesAnyHost")
  (preference-domain "com.apple.SpeakSelection")
  (preference-domain "com.apple.Accessibility")
)

; All below is the audio access

(allow ipc-posix-shm-read* ipc-posix-shm-write-data
  (ipc-posix-name-regex #"^AudioIO"))

(allow mach-lookup
  (global-name "com.apple.audio.coreaudiod")
  (global-name "com.apple.audio.audiohald"))

(allow iokit-open (iokit-user-client-class "IOAudioEngineUserClient"))

(allow file-read* (subpath "/Library/Audio/Plug-Ins"))

(allow device-microphone)

; exceptions for known mods that write to other directories
(allow file-read* file-write*
  (subpath (string-append home-path "/.e4mc_cache"))
)

; Prevent writing to executable files at runtime
; Many of these types are included out of caution and might not be necessary. Namely:
; - Those which run in in Terminal by default, since the OS is supposed to prevent Sandbox from opening documents in Terminal.
; - Files that require further user interaction to execute code or install software (e.g. pkg and dmg)
(if (string=? deny-risky-file-writes "TRUE")
  (deny file-write*
    (require-any
      ;(file-mode #o0700)
      (regex
        #".*app$"
        #".*app/.*"
        ;#".*jar$"
        #".*sh$"
        #".*bash$"
        #".*csh$"
        #".*zsh$"
        #".*command$"
        #".*pkg$"
        #".*pkg/.*"
        #".*dmg$"
        #".*action$"
        #".*workflow$"
        #".*docm$"
        #".*dotm$"
        #".*xlam$"
        #".*xlm$"
        #".*xlsm$"
        #".*xltm$"
        #".*potm$"
        #".*ppam$"
        #".*ppsm$"
        #".*pptm$"
      )
    )
  )
)
; Some types of files can open using LaunchServices and execute arbitrary code (e.g. .dylib files).
; However, they only execute if given executable permission.
; (This is probably not strictly necessary since the OS is supposed to prevent Sandbox from opening
; documents in Terminal. If this causes problems, then it could be evaluated later.)
(deny file-write-xattr (xattr "com.apple.quarantine") (with no-log))
;(if (string=? deny-risky-file-writes "TRUE")
;  (deny file-write-mode)
;)
(if (string=? deny-risky-file-writes "TRUE")
  (deny file-write-xattr)
)

;(if (string=? allow-urls "TRUE")
;  (allow lsopen)
;)
